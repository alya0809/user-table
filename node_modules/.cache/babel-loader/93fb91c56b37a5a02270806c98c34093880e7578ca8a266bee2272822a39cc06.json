{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cucumber8\\\\Desktop\\\\test\\\\user-table\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport UserTable from './components/UserTable';\nimport SearchBar from './components/SearchBar';\nimport UserModal from './components/UserModal';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Хук состояния для хранения всех пользователей\n  const [users, setUsers] = useState([]);\n  // Хук состояния для хранения отфильтрованных пользователей\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  // Хук состояния для хранения выбранного пользователя\n  const [selectedUser, setSelectedUser] = useState(null);\n  // Хук состояния для сортировки\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'ascending'\n  });\n\n  // Эффект для загрузки данных о пользователях при монтировании компонента\n  useEffect(() => {\n    fetch('https://dummyjson.com/users').then(res => res.json()).then(data => {\n      setUsers(data.users);\n      setFilteredUsers(data.users);\n    });\n  }, []);\n\n  // Обработчик поиска пользователей\n  const handleSearch = query => {\n    const keys = getKeyForSearch(query);\n    const searchPromises = keys.map(key => fetch(`https://dummyjson.com/users/filter?key=${key}&value=${query}`).then(res => res.json()).then(data => data.users || []));\n\n    // Ожидание выполнения всех запросов и обновление отфильтрованных пользователей\n    Promise.all(searchPromises).then(results => {\n      const users = results.flat();\n      const uniqueUsers = Array.from(new Set(users.map(u => u.id))).map(id => users.find(u => u.id === id));\n      setFilteredUsers(uniqueUsers);\n    }).catch(error => {\n      console.error(\"Error during search:\", error);\n    });\n  };\n\n  // Обработчик очистки результатов поиска\n  const handleClearSearch = () => {\n    setFilteredUsers(users);\n  };\n\n  // Определение ключа для поиска\n  const getKeyForSearch = query => {\n    if (!isNaN(query)) {\n      return ['age']; // Если запрос - число, искать по возрасту\n    } else if (query.toLowerCase() === 'male' || query.toLowerCase() === 'female') {\n      return ['gender']; // Если запрос - male или female, искать по полу\n    } else if (/^[\\d\\s\\-+]+$/.test(query)) {\n      return ['phone']; // Если запрос состоит из цифр и пробела, - и +, искать по телефону\n    } else if (/^[a-zA-Z\\s]+$/.test(query)) {\n      return ['firstName', 'lastName', 'address.city']; // Если запрос состоит только из букв и пробелов, искать по имени, фамилии и городу\n    } else if (/^[a-zA-Z0-9\\s,]+$/.test(query)) {\n      return ['address.address']; // Если запрос состоит из букв, цифр, пробелов или запятых, искать по адресу\n    } else {\n      return ['firstName']; // По умолчанию искать по имени\n    }\n  };\n\n  // Обработчик клика на строку таблицы\n  const handleRowClick = user => {\n    setSelectedUser(user);\n  };\n\n  // Обработчик закрытия модального окна\n  const handleCloseModal = () => {\n    setSelectedUser(null);\n  };\n\n  // Обработчик сортировки по ключу\n  const handleSort = key => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  // Вычисление отсортированных пользователей\n  const sortedUsers = React.useMemo(() => {\n    let sortableUsers = [...filteredUsers];\n    if (sortConfig.key !== null) {\n      sortableUsers.sort((a, b) => {\n        const aValue = sortConfig.key === 'fullName' ? `${a.firstName} ${a.lastName}` : sortConfig.key === 'address' ? `${a.address.city}, ${a.address.address}` : a[sortConfig.key];\n        const bValue = sortConfig.key === 'fullName' ? `${b.firstName} ${b.lastName}` : sortConfig.key === 'address' ? `${b.address.city}, ${b.address.address}` : b[sortConfig.key];\n        if (aValue < bValue) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (aValue > bValue) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableUsers;\n  }, [filteredUsers, sortConfig]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch,\n      onClearSearch: handleClearSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), filteredUsers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(UserTable, {\n      users: sortedUsers,\n      onRowClick: handleRowClick,\n      onSort: handleSort,\n      sortConfig: sortConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(UserModal, {\n      user: selectedUser,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+1fnaYXAj4ofKT44jBmOxUTH9n0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","UserTable","SearchBar","UserModal","jsxDEV","_jsxDEV","App","_s","users","setUsers","filteredUsers","setFilteredUsers","selectedUser","setSelectedUser","sortConfig","setSortConfig","key","direction","fetch","then","res","json","data","handleSearch","query","keys","getKeyForSearch","searchPromises","map","Promise","all","results","flat","uniqueUsers","Array","from","Set","u","id","find","catch","error","console","handleClearSearch","isNaN","toLowerCase","test","handleRowClick","user","handleCloseModal","handleSort","sortedUsers","useMemo","sortableUsers","sort","a","b","aValue","firstName","lastName","address","city","bValue","className","children","onSearch","onClearSearch","fileName","_jsxFileName","lineNumber","columnNumber","length","onRowClick","onSort","onClose","_c","$RefreshReg$"],"sources":["C:/Users/cucumber8/Desktop/test/user-table/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport UserTable from './components/UserTable';\nimport SearchBar from './components/SearchBar';\nimport UserModal from './components/UserModal';\nimport './styles/App.css';\n\nconst App = () => {\n  // Хук состояния для хранения всех пользователей\n  const [users, setUsers] = useState([]);\n  // Хук состояния для хранения отфильтрованных пользователей\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  // Хук состояния для хранения выбранного пользователя\n  const [selectedUser, setSelectedUser] = useState(null);\n  // Хук состояния для сортировки\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'ascending' });\n\n  // Эффект для загрузки данных о пользователях при монтировании компонента\n  useEffect(() => {\n    fetch('https://dummyjson.com/users')\n      .then(res => res.json())\n      .then(data => {\n        setUsers(data.users);\n        setFilteredUsers(data.users);\n      });\n  }, []);\n\n  // Обработчик поиска пользователей\n  const handleSearch = (query) => {\n    const keys = getKeyForSearch(query);\n\n    const searchPromises = keys.map(key =>\n      fetch(`https://dummyjson.com/users/filter?key=${key}&value=${query}`)\n        .then(res => res.json())\n        .then(data => data.users || [])\n    );\n\n    // Ожидание выполнения всех запросов и обновление отфильтрованных пользователей\n    Promise.all(searchPromises)\n      .then(results => {\n        const users = results.flat();\n        const uniqueUsers = Array.from(new Set(users.map(u => u.id))).map(id => users.find(u => u.id === id));\n        setFilteredUsers(uniqueUsers);\n      })\n      .catch(error => {\n        console.error(\"Error during search:\", error);\n      });\n  };\n\n  // Обработчик очистки результатов поиска\n  const handleClearSearch = () => {\n    setFilteredUsers(users);\n  };\n\n  // Определение ключа для поиска\n  const getKeyForSearch = (query) => {\n    if (!isNaN(query)) {\n      return ['age']; // Если запрос - число, искать по возрасту\n    } else if (query.toLowerCase() === 'male' || query.toLowerCase() === 'female') {\n      return ['gender']; // Если запрос - male или female, искать по полу\n    } else if (/^[\\d\\s\\-+]+$/.test(query)) {\n      return ['phone']; // Если запрос состоит из цифр и пробела, - и +, искать по телефону\n    } else if (/^[a-zA-Z\\s]+$/.test(query)) {\n      return ['firstName', 'lastName', 'address.city']; // Если запрос состоит только из букв и пробелов, искать по имени, фамилии и городу\n    } else if (/^[a-zA-Z0-9\\s,]+$/.test(query)) {\n      return ['address.address']; // Если запрос состоит из букв, цифр, пробелов или запятых, искать по адресу\n    } else {\n      return ['firstName']; // По умолчанию искать по имени\n    }\n  };\n\n  // Обработчик клика на строку таблицы\n  const handleRowClick = (user) => {\n    setSelectedUser(user);\n  };\n\n  // Обработчик закрытия модального окна\n  const handleCloseModal = () => {\n    setSelectedUser(null);\n  };\n\n  // Обработчик сортировки по ключу\n  const handleSort = (key) => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  // Вычисление отсортированных пользователей\n  const sortedUsers = React.useMemo(() => {\n    let sortableUsers = [...filteredUsers];\n    if (sortConfig.key !== null) {\n      sortableUsers.sort((a, b) => {\n        const aValue = sortConfig.key === 'fullName' ? `${a.firstName} ${a.lastName}` : sortConfig.key === 'address' ? `${a.address.city}, ${a.address.address}` : a[sortConfig.key];\n        const bValue = sortConfig.key === 'fullName' ? `${b.firstName} ${b.lastName}` : sortConfig.key === 'address' ? `${b.address.city}, ${b.address.address}` : b[sortConfig.key];\n\n        if (aValue < bValue) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (aValue > bValue) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableUsers;\n  }, [filteredUsers, sortConfig]);\n\n  return (\n    <div className=\"app\">\n      <SearchBar onSearch={handleSearch} onClearSearch={handleClearSearch} />\n      {filteredUsers.length === 0 ? (\n        <p>Ничего не найдено</p>\n      ) : (\n        <UserTable users={sortedUsers} onRowClick={handleRowClick} onSort={handleSort} sortConfig={sortConfig} />\n      )}\n      {selectedUser && <UserModal user={selectedUser} onClose={handleCloseModal} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}